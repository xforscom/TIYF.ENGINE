name: verify-strict

on:
  workflow_dispatch:
  pull_request:
    branches: [ main, "feat/**", "fix/**" ]
  push:
    branches: [ main ]

jobs:
  verify-strict:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build (Release)
        run: |
          set -euo pipefail
          mkdir -p scratch
          set +e
          dotnet build -c Release | tee scratch/build.out
          BUILD_EXIT=$?
          set -e
          echo "$BUILD_EXIT" > scratch/build_exit.txt

      - name: Run Sim (STRICT)
        run: |
          set -euo pipefail
          SIM="src/TiYf.Engine.Sim/bin/Release/net8.0/TiYf.Engine.Sim.dll"
          CFG="tests/fixtures/backtest_m0/config.backtest-m0.json"
          RUN_ID="M0-RUN-STRICT"
          mkdir -p scratch
          set +e
          dotnet exec "$SIM" --config "$CFG" --run-id "$RUN_ID" | tee scratch/sim.out
          SIM_EXIT=$?
          set -e
          echo "$SIM_EXIT" > scratch/sim_exit.txt
          EV_PATH=$(sed -n 's/^JOURNAL_DIR_EVENTS=//p' scratch/sim.out | head -1)
          TR_PATH=$(sed -n 's/^JOURNAL_DIR_TRADES=//p' scratch/sim.out | head -1)
          echo "$EV_PATH" > scratch/events_path.txt
          echo "$TR_PATH" > scratch/trades_path.txt
          if [[ -n "$EV_PATH" ]]; then
            dirname "$EV_PATH" > scratch/run_dir.txt
          else
            echo "" > scratch/run_dir.txt
          fi

      - name: Verify strict (collect only)
        run: |
          set -euo pipefail
          TOOLS="src/TiYf.Engine.Tools/bin/Release/net8.0/TiYf.Engine.Tools.dll"
          EV_PATH=$(cat scratch/events_path.txt)
          TR_PATH=$(cat scratch/trades_path.txt)
          mkdir -p scratch
          if [[ -z "$EV_PATH" || -z "$TR_PATH" ]]; then
            echo "Missing events/trades paths from simulator output" >&2
            echo "1" > scratch/strict_exit.txt
            echo '{}' > scratch/strict.json
          else
            set +e
            dotnet exec "$TOOLS" verify strict \
              --events "$EV_PATH" \
              --trades "$TR_PATH" \
              --schema 1.3.0 \
              --json | tee scratch/strict.json
            STRICT_EXIT=$?
            set -e
            echo "$STRICT_EXIT" > scratch/strict_exit.txt
          fi

      - name: Collect diagnostics
        if: always()
        run: |
          set -euo pipefail
          mkdir -p artifacts/verify-strict
          mkdir -p journals/STRICT
          cp scratch/build.out artifacts/verify-strict/build.out || true
          cp scratch/build_exit.txt artifacts/verify-strict/build_exit.txt || true
          cp scratch/sim.out artifacts/verify-strict/sim.out || true
          cp scratch/sim_exit.txt artifacts/verify-strict/sim_exit.txt || true
          cp scratch/events_path.txt artifacts/verify-strict/events_path.txt || true
          cp scratch/trades_path.txt artifacts/verify-strict/trades_path.txt || true
          cp scratch/run_dir.txt artifacts/verify-strict/run_dir.txt || true
          cp scratch/strict.json artifacts/verify-strict/strict.json || true
          cp scratch/strict_exit.txt artifacts/verify-strict/strict_exit.txt || true
          RUN_DIR=$(cat scratch/run_dir.txt 2>/dev/null || echo "")
          if [[ -n "$RUN_DIR" && -d "$RUN_DIR" ]]; then
            rsync -a "$RUN_DIR/" "journals/STRICT/"
          fi
          touch journals/STRICT/.keep

      - name: Invariants (final gate)
        run: |
          set -euo pipefail
          BUILD_EXIT=$(cat scratch/build_exit.txt 2>/dev/null || echo 1)
          SIM_EXIT=$(cat scratch/sim_exit.txt 2>/dev/null || echo 1)
          STRICT_EXIT=$(cat scratch/strict_exit.txt 2>/dev/null || echo 1)
          EV_PATH=$(cat scratch/events_path.txt 2>/dev/null || echo "")
          TR_PATH=$(cat scratch/trades_path.txt 2>/dev/null || echo "")
          if [[ "$BUILD_EXIT" != "0" ]]; then
            echo "dotnet build exited with $BUILD_EXIT" >&2
            exit 2
          fi
          if [[ "$SIM_EXIT" != "0" ]]; then
            echo "Simulator exited with $SIM_EXIT" >&2
            exit 2
          fi
          if [[ "$STRICT_EXIT" != "0" ]]; then
            echo "Strict verifier exited with $STRICT_EXIT" >&2
            exit 2
          fi
          if [[ -z "$EV_PATH" || -z "$TR_PATH" ]]; then
            echo "Missing events/trades paths" >&2
            exit 2
          fi
          if [[ ! -f "$EV_PATH" || ! -f "$TR_PATH" ]]; then
            echo "Events or trades CSV missing" >&2
            exit 2
          fi
          ALERTS=$(grep -c '^ALERT_BLOCK_' "$EV_PATH" || true)
          TR_ROWS=$(tail -n +2 "$TR_PATH" | wc -l | awk '{print $1}')
          if [[ "$ALERTS" != "0" ]]; then
            echo "Alerts found=$ALERTS" >&2
            exit 2
          fi
          if [[ "$TR_ROWS" != "6" ]]; then
            echo "Unexpected trades rows=$TR_ROWS" >&2
            exit 2
          fi
          echo "verify-strict invariants satisfied"

      - name: Upload artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: verify-strict
          path: |
            scratch/build.out
            scratch/build_exit.txt
            scratch/sim.out
            scratch/sim_exit.txt
            scratch/events_path.txt
            scratch/trades_path.txt
            scratch/run_dir.txt
            scratch/strict.json
            scratch/strict_exit.txt
            journals/STRICT/**